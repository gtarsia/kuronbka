;===============================================
;BUTTON READING STRUCTURE
;===============================================
; READBUTTON:             START OF FUNCTION
;   LDA $4016             READ CONTROLLER VALUE
;   AND #%00000001        READ ONLY BIT 0
;   BEQ READBUTTONDONE    IF 0 THEN GO TO END
;                         IF 1 THEN DONT BRANCH AND MOVE ON
;
;   DO STUFF 
;
; READBUTTONDONE:         END OF FUNCTION


READA: 
  LDA $4016
  AND #%00000001
  BEQ READADONE  

CONTINUEREADA:
  LDA #%01000000        ;FLIP SPRITE HORIZONTALLY TO THE RIGHT
  STA $0202

  LDA #$1                 ;SET ALL VARIABLES TO ZERO TO HAVE AN ABILITY TO ASCEND
  STA GORIGHT
  STA GOINGRIGHTUP
  LDA #$0
  STA RIGHTDOWNCOUNTER
  STA RIGHTUPCOUNTER
  STA GOINGRIGHTDOWN
  STA GOINGRIGHTDOWN
  STA RIGHTSWITCHED

  STA GOLEFT
  STA LEFTUPCOUNTER
  STA LEFTDOWNCOUNTER
  STA GOINGLEFTUP
  STA GOINGLEFTDOWN
  STA LEFTSWITCHED

  JMP JUMPRIGHT           ;JUMP TO FUNCTION

SWITCHRIGHTUPDOWN:          ;STOP MOVING UP AND GO DOWN
  JSR SWITCHRIGHTUPDOWNSUB

READADONE:
  
JUMPRIGHT:
  LDA GORIGHT       ;DONT GO RIGHT CONSTANTLY
  CMP #$1
  BEQ CONTINUERIGHT ;USE TRICK TO EXTEND REACH OF CODE POINTER
  JMP JUMPRIGHTEND  ;LEAVE CYCLE IF VARIABLE NOT SET

CONTINUERIGHT:
  LDA #$0
  STA FALLING

JUMPUPRIGHTLOOP:          ;START A LOOP TO MOVE RIGHT AND UP DIAGONALLY
  LDA GOINGRIGHTDOWN      ;SEE IF THE BIRD IS SUPPOSED TO MOVE DOWNWARDS
  CMP #$1
  BEQ JUMPUPRIGHTLOOPEND

  LDA #$1                 ;PREVENT IT DROM GOING DOWN
  STA GOINGRIGHTUP
  LDA #$0
  STA GOINGRIGHTDOWN

  INC RIGHTUPCOUNTER      ;MAKE A COUNTER FOR THE AMOUNT OF FRAMES THE BIRD IS GOING UP
  LDA RIGHTUPCOUNTER
  CMP #$05
  BEQ JUMPUPRIGHTLOOPEND

  LDA $0200     ;MOVE SPRITE UP
  CLC
  SBC #$02
  STA $0200

  LDA $0203     ;MOVE SPRITE RIGHT
  CLC
  ADC #$02
  STA $0203
JUMPUPRIGHTLOOPEND:       ;VERIFY THAT THE CYCLE ABOVE IS COMPLETED AND THAT IT CAN NOW GO DOWN
  LDA RIGHTSWITCHED
  CMP #$1
  BEQ JUMPDOWNRIGHTLOOP
  LDA RIGHTUPCOUNTER
  CMP #$05
  BEQ SWITCHRIGHTUPDOWN

JUMPDOWNRIGHTLOOP:        ;GO DOWN
  LDA GOINGRIGHTUP          ;SEE IF THE BIRD IS SUPPOSED TO GO DOWN
  CMP #$1
  BEQ JUMPDOWNRIGHTLOOPEND

  LDA #$1                   ;PREVENT IT FROM GOING UP
  STA GOINGRIGHTDOWN
  LDA #$0
  STA GOINGRIGHTUP

  INC RIGHTDOWNCOUNTER        ;MAKE A COUNTER TO COUNT HOW MANY FRAMES THE BIRD GOES DOWN
  LDA RIGHTDOWNCOUNTER
  CMP #$08
  BEQ JUMPDOWNRIGHTLOOPEND

  LDA $0200     ;MOVE SPRITE DOWN
  CLC
  ADC #$02
  STA $0200

  LDA $0203     ;MOVE SPRITE RIGHT
  CLC
  ADC #$02
  STA $0203
JUMPDOWNRIGHTLOOPEND:

CHECKBOTHVARSRIGHT:
  LDA RIGHTDOWNCOUNTER          ;SEE IF BOTH CYCLES HAVE COMPLETED
  CMP #$08
  BNE CHECKBOTHVARSRIGHTEND
  LDA RIGHTUPCOUNTER
  CMP #$05
  BNE CHECKBOTHVARSRIGHTEND

  LDA #$0
  STA GORIGHT

  LDA #$1                       ;MAKE BIRD FALL AGAIN
  STA FALLING

CHECKBOTHVARSRIGHTEND:

JUMPRIGHTEND:

;==========================================
;THIS SECTION WORKS PRETTY MUCH THE SAME AS
;           THE PREVIOUS ONE
;==========================================

READB: 
  LDA $4016
  AND #%00000001
  BEQ READBDONE

CONTINUEREADB:
  LDA #%00000000        ;FLIP SPRITE HORIZONTALLY TO THE LEFT
  STA $0202

  LDA #$1                 ;DISABLE RIGHT JUMP
  STA GOLEFT
  STA GOINGLEFTUP
  LDA #$0
  STA GORIGHT
  STA RIGHTDOWNCOUNTER
  STA RIGHTUPCOUNTER
  STA GOINGRIGHTDOWN
  STA GOINGRIGHTDOWN
  STA RIGHTSWITCHED

  STA LEFTUPCOUNTER
  STA LEFTDOWNCOUNTER
  STA GOINGLEFTUP
  STA GOINGLEFTDOWN
  STA LEFTSWITCHED

  JMP JUMPLEFT

SWITCHLEFTUPDOWN:
  JSR SWITCHLEFTUPDOWNSUB

READBDONE:

JUMPLEFT:
  LDA GOLEFT       ;DONT GO LEFT CONSTANTLY
  CMP #$1
  BEQ CONTINUELEFT
  JMP JUMPLEFTEND

CONTINUELEFT:
  LDA #$0
  STA FALLING

JUMPUPLEFTLOOP:
  LDA GOINGLEFTDOWN
  CMP #$1
  BEQ JUMPUPLEFTLOOPEND

  LDA #$1
  STA GOINGLEFTUP
  LDA #$0
  STA GOINGLEFTDOWN

  INC LEFTUPCOUNTER
  LDA LEFTUPCOUNTER
  CMP #$05
  BEQ JUMPUPLEFTLOOPEND

  LDA $0200     ;MOVE SPRITE UP
  CLC
  SBC #$02
  STA $0200

  LDA $0203     ;MOVE SPRITE RIGHT
  SEC
  SBC #$02
  STA $0203
JUMPUPLEFTLOOPEND:
  LDA LEFTSWITCHED
  CMP #$1
  BEQ JUMPDOWNLEFTLOOP
  LDA LEFTUPCOUNTER
  CMP #$05
  BEQ SWITCHLEFTUPDOWN

JUMPDOWNLEFTLOOP:

  LDA GOINGLEFTUP
  CMP #$1
  BEQ JUMPDOWNLEFTLOOPEND

  LDA #$1
  STA GOINGLEFTDOWN
  LDA #$0
  STA GOINGLEFTUP

  INC LEFTDOWNCOUNTER
  LDA LEFTDOWNCOUNTER
  CMP #$08
  BEQ JUMPDOWNLEFTLOOPEND

  LDA $0200     ;MOVE SPRITE DOWN
  CLC
  ADC #$02
  STA $0200

  LDA $0203     ;MOVE SPRITE LEFT
  SEC
  SBC #$02
  STA $0203
JUMPDOWNLEFTLOOPEND:

CHECKBOTHVARSLEFT:
  LDA LEFTDOWNCOUNTER
  CMP #$08
  BNE CHECKBOTHVARSLEFTEND
  LDA LEFTUPCOUNTER
  CMP #$05
  BNE CHECKBOTHVARSLEFTEND

  LDA #$0
  STA GOLEFT

  LDA #$1
  STA FALLING

CHECKBOTHVARSLEFTEND:

JUMPLEFTEND:

READSELECT:
  LDA $4016
  AND #%00000001
  BEQ READSELECTDONE
READSELECTDONE:

READSTART:
  LDA $4016
  AND #%00000001
  BEQ READSTARTDONE
READSTARTDONE:
  
READUP:
  LDA $4016
  AND #%0000001
  BEQ READUPDONE
READUPDONE:

READDOWN:
  LDA $4016
  AND #%00000001
  BEQ READDOWNDONE
READDOWNDONE:

READLEFT:
  LDA $4016
  AND #%00000001
  BEQ READLEFTDONE
READLEFTDONE:

READRIGHT:
  LDA $4016
  AND #%00000001
  BEQ READRIGHTDONE
READRIGHTDONE:
