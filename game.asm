  .include "_load.asm"
  .include "_input.asm"

FALL:               ;FALL
  LDA FALLING       ;SEE IF SUPPOSED TO FALL
  CMP #$0
  BEQ DONTFALL

  LDA $0200         ;MOVE DOWN
  CLC
  ADC #$02
  STA $0200
DONTFALL:

ADVANCEFRAME:
  JMP ADVANCEFRAMEFUNC

  RTI             ; RETURN FROM INTERRUPT
 
;;;;;;;;;;;;;;  
  
  
  
  .BANK 1
  .ORG $E000
PALETTE:
  .DB $0F,$31,$32,$33,$34,$35,$36,$37,$38,$39,$3A,$3B,$3C,$3D,$3E,$0F
  .DB $0F,$30,$06,$27

SPRITES:
     ;VERT TILE ATTR HORIZ
  .DB $80, $01, $00, $80    ;SPRITE 0
  ;.DB $50, $10, $00, $60    ;SPRITE 1

  .ORG $FFFA     ;FIRST OF THE THREE VECTORS STARTS HERE
  .DW NMI        ;WHEN AN NMI HAPPENS (ONCE PER FRAME IF ENABLED) THE 
                   ;PROCESSOR WILL JUMP TO THE LABEL NMI:
  .DW RESET      ;WHEN THE PROCESSOR FIRST TURNS ON OR IS RESET, IT WILL JUMP
                   ;TO THE LABEL RESET:
  .DW 0          ;EXTERNAL INTERRUPT IRQ IS NOT USED IN THIS TUTORIAL
  
  
;;;;;;;;;;;;;;  
  
  
  .BANK 2
  .ORG $0000
  .INCBIN "game.chr"   ;INCLUDES 8KB GRAPHICS FILE FROM SMB1
